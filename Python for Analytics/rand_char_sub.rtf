{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\sa100\partightenfactor0

\f1\fs26\fsmilli13333 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write the Pseudo Code for a program that will accept a text string and will encrypt using a random character substitution.\
Return: original text, encrpyted text, 26 character encryption string\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa120\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 return string is lower case only\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 assume a function named RANDOM that returns a value from 1-26\
\pard\pardeftab720\sa100\partightenfactor0
\cf0 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 PSEUDO CODE:
\f1\fs26\fsmilli13333 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \

\f0\fs24 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
FUNCTION generate_random_encryption_string():\
    encryption_string <- "abcdefghijklmnopqrstuvwxyz"\
    encryption_list <- Convert encryption_string to a list\
    Shuffle encryption_list randomly\
    RETURN Convert encryption_list to a string\
\
FUNCTION encrypt_text(input_text):\
    encryption_string <- generate_random_encryption_string()\
    encrypted_text <- ""\
    \
    FOR EACH char IN input_text:\
        IF char IS lowercase:\
            index <- ASCII value of char - ASCII value of 'a'\
            IF 0 <= index < 26:\
                encrypted_char <- character at index in encryption_string\
                Add encrypted_char to encrypted_text\
            ELSE:\
                Add char to encrypted_text\
        ELSE:\
            Add char to encrypted_text\
\
    RETURN input_text, encrypted_text, encryption_string\
\
IF __name__ IS "__main__":\
    input_text <- INPUT("Enter the text to encrypt: ")  # Convert input to lowercase\
    input_text <- Convert input_text to lowercase\
    original_text, encrypted_text, encryption_string <- encrypt_text(input_text)\
    \
    PRINT "Original Text:", original_text\
    PRINT "Encrypted Text:", encrypted_text\
    PRINT "Encryption String:", encryption_string\
}